[versions]

# Dependencies
kotlin = "1.7.20"
kotlinx-coroutines = "1.6.4"

testcontainers = "1.17.5"

spring-sleuth = "3.1.5"

[libraries]

gradle-plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-plugin-kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
gradle-plugin-spring-boot = { module = "org.springframework.boot:spring-boot-gradle-plugin", version = "2.7.5" }
gradle-plugin-spring-dm = { module = "io.spring.gradle:dependency-management-plugin", version = "1.0.15.RELEASE" }

kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines" }

spring-boot-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-rsocket = { module = "org.springframework.boot:spring-boot-starter-rsocket" }
spring-boot-r2dbc = { module = "org.springframework.boot:spring-boot-starter-data-r2dbc" }
spring-boot-reactive-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis-reactive" }
spring-boot-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-security-rsocket = { module = "org.springframework.security:spring-security-rsocket" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }

spring-cloud-sleuth = { module = "org.springframework.cloud:spring-cloud-starter-sleuth", version.ref = "spring-sleuth" }
spring-cloud-sleuth-zipkin = { module = "org.springframework.cloud:spring-cloud-sleuth-zipkin", version.ref = "spring-sleuth" }

reactor-kotlin = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions" }
reactor-test = { module = "io.projectreactor:reactor-test" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
jackson-datatype-jdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8" }

jasync-r2dbc-mysql = { module = "com.github.jasync-sql:jasync-r2dbc-mysql", version = "2.1.7" }
r2dbc-proxy = { module = "io.r2dbc:r2dbc-proxy", version = "1.1.0.RELEASE" }

testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-mysql = { module = "org.testcontainers:mysql", version.ref = "testcontainers" }
testcontainers-r2dbc = { module = "org.testcontainers:r2dbc", version.ref = "testcontainers" }

mockwebserver = { module = "com.squareup.okhttp3:mockwebserver" }

mockk = { module = "io.mockk:mockk", version = "1.13.2" }

embedded-redis = { module = "it.ozimov:embedded-redis", version = "0.7.2" }

prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version = "1.10.2" }

firebase-admin = { module = "com.google.firebase:firebase-admin", version = "9.1.1" }

libphonenumber = { module = "com.googlecode.libphonenumber:libphonenumber", version = "8.13.7" }

[bundles]

gradlePlugins = [
    "gradle-plugin-kotlin",
    "gradle-plugin-kotlin-allopen",
    "gradle-plugin-spring-boot",
    "gradle-plugin-spring-dm",
]

serverCommon = [
    "spring-boot-webflux",
    "spring-boot-actuator",
    "spring-cloud-sleuth",
    "spring-cloud-sleuth-zipkin",
    "jackson-kotlin",
    "jackson-datatype-jdk8",
    "reactor-kotlin",
    "kotlin-stdlib",
    "kotlin-reflect",
    "kotlinx-coroutines-reactor",
]

serverCommonRuntime = [
    "prometheus",
]

serverCommonTest = [
    "spring-boot-test",
    "reactor-test",
]

serverCore = [
    "spring-boot-r2dbc",
    "r2dbc-proxy",
    "libphonenumber",
]

serverCoreProcessor = [
    "spring-boot-configuration-processor"
]

serverCoreRuntime = [
    "jasync-r2dbc-mysql",
]

serverCoreTest = [
    "spring-boot-test",
    "reactor-test",
    "testcontainers-junit",
    "testcontainers-r2dbc",
    "testcontainers-mysql",
    "mockk",
]

serverAdmin = [
]

serverAdminProcessor = [
    "spring-boot-configuration-processor"
]

serverAdminRuntime = [
]

serverAdminTest = [
    "spring-boot-test",
    "reactor-test",
    "mockwebserver",
    "mockk",
]

serverConsumer = [
    "spring-boot-rsocket",
    "spring-boot-reactive-redis",
    "spring-boot-security",
    "spring-security-rsocket",
    "firebase-admin",
]

serverConsumerProcessor = [
    "spring-boot-configuration-processor"
]

serverConsumerRuntime = [
]

serverConsumerTest = [
    "spring-boot-test",
    "reactor-test",
    "mockwebserver",
    "mockk",
]

serverAuth = [
    "firebase-admin",
]

serverAuthProcessor = [
    "spring-boot-configuration-processor"
]

serverAuthRuntime = [
]

serverAuthTest = [
    "spring-boot-test",
    "reactor-test",
    "mockwebserver",
    "mockk",
]