openapi: 3.0.0
info:
  description: Public API for NoljaNolja admin
  version: 1.0.0
  title: NoljaNolja Swagger
  contact:
    email: nguyenbrother9x@gmail.com
tags:
  - name: User
    description: Operation relate to current user
  - name: Media
    description: Operation relate to media like stickers, emoji, etc.
  - name: Reward
    description: Config chat/video rewards.
paths:
  /api/v1/users/me:
    get:
      tags: [ User ]
      summary: Get Current logged-in user info
      description: Return user info
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/User"
  /api/v1/media/sticker-packs:
    post:
      tags: [ Media ]
      summary: Create sticker pack
      description: ...
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [ file ]
              properties:
                file:
                  type: string
                  format: binary
                  description: the zip file contains sticker images, a tray image, and a metadata file name `contents.json`
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        type: number
                        description: the id of the generated sticker pack
  /api/v1/reward/videos/configs:
    get:
      tags: [ Reward ]
      summary: Get all reward configs for videos
      description: Get all reward configs for videos
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/VideoRewardConfig"
    put:
      tags: [ Reward ]
      summary: Upsert config for a video
      description: Upsert config for a video
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                videoId:
                  type: string
                isActive:
                  type: boolean
                maxApplyTimes:
                  type: number
                  format: integer
                totalPoints:
                  type: number
                  format: int64
                  nullable: true
                rewardProgresses:
                  type: array
                  items:
                    type: object
                    properties:
                      point:
                        type: number
                        format: integer
                      progress:
                        type: number
                        format: double
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/VideoRewardConfig"
  /api/v1/reward/videos/configs/{configId}:
    get:
      tags: [ Reward ]
      summary: Get detail of reward config for a video
      description: Get detail of reward config for a video
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: configId
          schema:
            type: number
          description: the id of the config
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/VideoRewardConfig"
    delete:
      tags: [ Reward ]
      summary: Delete a video config
      description: Delete a video config
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: configId
          schema:
            type: number
          description: the id of the config
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
  /api/v1/reward/chat/configs:
    get:
      tags: [ Reward ]
      summary: Get reward configs for chat
      description: Get reward configs for chat
      security:
        - bearerAuth: [ ]
      parameters:
        - in: query
          name: roomType
          schema:
            type: string
            enum: [SINGLE, GROUP]
            nullable: true
          description: get config by room type
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ChatRewardConfig"
    put:
      tags: [ Reward ]
      summary: Upsert chat config
      description: Upsert chat config
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roomType:
                  type: string
                  enum: [SINGLE, GROUP]
                isActive:
                  type: boolean
                maxApplyTimes:
                  type: number
                  format: integer
                rewardPoint:
                  type: number
                  format: int64
                numberOfMessages:
                  type: number
                  format: integer
                onlyRewardCreator:
                  type: boolean
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/ChatRewardConfig"

components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token from firebase (do not put 'bearer' in here)
      name: Bearer Token
  schemas:
    BaseResponse:
      type: object
      required: [ code, message ]
      properties:
        code:
          type: integer
        message:
          type: string
    User:
      type: object
      required: [ id ]
      properties:
        id:
          type: string
        name:
          type: string
        avatar:
          type: string
        phone:
          type: string
        email:
          type: string
        dob:
          type: string
          description: in date format
          example: 2023-03-10 04:04:43
        createdAt:
          type: string
          description: in date format
          example: 2023-03-10 04:04:43
        updatedAt:
          type: string
          description: in date format
          example: 2023-03-10 04:04:43
    VideoRewardConfig:
      type: object
      properties:
        id:
          type: number
          format: int64
        videoId:
          type: string
        isActive:
          type: boolean
        maxApplyTimes:
          type: number
          format: integer
        totalPoints:
          type: number
          format: int64
          nullable: true
        rewardProgresses:
          type: array
          items:
            type: object
            properties:
              progress:
                type: number
                format: double
              point:
                type: number
                format: int64
    ChatRewardConfig:
      type: object
      properties:
        id:
          type: number
          format: int64
        roomType:
          type: string
          enum: [ SINGLE, GROUP ]
        isActive:
          type: boolean
        maxApplyTimes:
          type: number
          format: integer
        onlyRewardCreator:
          type: boolean
        rewardPoint:
          type: number
          format: int64
        numberOfMessages:
          type: number
          format: integer
